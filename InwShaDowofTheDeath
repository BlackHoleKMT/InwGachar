local NotifyLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/vKhonshu/intro/main/ui"))()
NotifyLib.prompt('I came to take revenge', '‡∏â‡∏±‡∏ô‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÅ‡∏Ñ‡πâ‡∏ô', 3)
NotifyLib.prompt('I am The Night', '‡∏â‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏≠‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô', 3)
NotifyLib.prompt('I am Bat Man', '‡∏Å‡∏π‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏ö‡∏ï‡πÅ‡∏°‡∏ô', 3)
NotifyLib.prompt('„Ç§„Çø„Ç§', 'Itai', 3)
NotifyLib.prompt('„ÅÑ„ÅÑÊÑü„Åò', 'Kimochƒ´i kotoba', 3)
NotifyLib.prompt('„Åä„ÅØ„Çà„ÅÜ', 'Fuck you All Gameüòè', 5)
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/Ido1212/Mr.Beast.ccV2/main/CLASHROYALE.COM"))()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("UpDate Westbound,Combat Warriors ")
local Tab = Window:NewTab("Player")
local Section = Tab:NewSection("Select Player!")
Plr = {}
for i,v in pairs(game:GetService("Players"):GetChildren()) do
    table.insert(Plr,v.Name) 
end
local drop = Section:NewDropdown("Select Player!", "Click To Select", Plr, function(t)
   PlayerTP = t
end)
Section:NewButton("Refresh Dropdown","Refresh Dropdown", function()
  Plr = {}
for i,v in pairs(game:GetService("Players"):GetChildren()) do
    table.insert(Plr,v.Name) 
end
  drop:Refresh(Plr)
end)
Section:NewButton("Click To TP", "", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[PlayerTP].Character.HumanoidRootPart.CFrame
end)
Section:NewToggle("Auto Tp", "", function(t)
_G.TPPlayer = t
while _G.TPPlayer do wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[PlayerTP].Character.HumanoidRootPart.CFrame
end
end)

Section:NewButton("R15 Invisible", "can interact", function()
local removeNametags = false -- remove custom billboardgui nametags from hrp, could trigger anticheat

local plr = game:GetService("Players").LocalPlayer
local character = plr.Character
local hrp = character.HumanoidRootPart
local old = hrp.CFrame

if not character:FindFirstChild("LowerTorso") or character.PrimaryPart ~= hrp then
return print("unsupported")
end

if removeNametags then
local tag = hrp:FindFirstChildOfClass("BillboardGui")
if tag then tag:Destroy() end

hrp.ChildAdded:Connect(function(item)
if item:IsA("BillboardGui") then
task.wait()
item:Destroy()
end
end)
end

local newroot = character.LowerTorso.Root:Clone()
hrp.Parent = workspace
character.PrimaryPart = hrp
character:MoveTo(Vector3.new(old.X,9e9,old.Z))
hrp.Parent = character
task.wait(0.5)
newroot.Parent = character.LowerTorso
hrp.CFrame = old
end)

Section:NewToggle("By Pass Tp", "", function()
	game.Players.localPlayer.Character.Humanoid:setStateEnabled(15,false)
end)
local function Bypass()
   local args = {
   [1] = "Player",
   [2] = "SpawnCharacter"
   };
   game:GetService("ReplicatedStorage").Remotes.Sync:InvokeServer(unpack(args))
end

Section:NewToggle("TpRandom on", "", function()
    _G.loop = true;
while _G.loop do wait()
local randomPlayer = game.Players:GetPlayers()
[math.random(1,#game.Players:GetPlayers())]
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(randomPlayer.Character.Head.Position.X, randomPlayer.Character.Head.Position.Y, randomPlayer.Character.Head.Position.Z))
wait(.5)
end
end)
Section:NewToggle("TpRandom off", "", function()
    _G.loop = false;
while _G.loop do wait()
local randomPlayer = game.Players:GetPlayers()
[math.random(1,#game.Players:GetPlayers())]
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(randomPlayer.Character.Head.Position.X, randomPlayer.Character.Head.Position.Y, randomPlayer.Character.Head.Position.Z))
wait(.1)
end
end)





local Tab = Window:NewTab("Main")
local Section = Tab:NewSection("Funtion")
Section:NewButton("ESP Name", " ", function()
    while wait() do
     pcall(function()
       for i,v in pairs(game.Players:GetChildren()) do
            if not v.Character.Head:FindFirstChild("ESP") then
                local BillboardGui = Instance.new("BillboardGui")
                local TextLabel = Instance.new("TextLabel")
                BillboardGui.Parent = v.Character.Head
                BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                BillboardGui.Active = true
                BillboardGui.Name = "ESP"
                BillboardGui.AlwaysOnTop = true
                BillboardGui.LightInfluence = 1.000
                BillboardGui.Size = UDim2.new(0, 200, 0, 50)
                BillboardGui.StudsOffset = Vector3.new(0, 2.5, 0)
                TextLabel.Parent = BillboardGui
                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel.BackgroundTransparency = 1.000
                TextLabel.Size = UDim2.new(0, 200, 0, 50)
                TextLabel.Font = Enum.Font.GothamBold
                TextLabel.Text = v.Name
                TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel.TextScaled = true
                TextLabel.TextSize = 14.000
                TextLabel.TextStrokeTransparency = 0.000
                TextLabel.TextWrapped = true
            end
        end
    end) 
end
end)
Section:NewButton("ESP Color", " ", function()
    local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Highlight = Instance.new("Highlight")
Highlight.Name = "Highlight"
function ApplyToCurrentPlayers()
    for i,player in pairs(Players:GetChildren()) do 
        repeat wait() until player.Character
        if not player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
            local HighlightClone = Highlight:Clone()
            HighlightClone.Adornee = player.Character
            HighlightClone.Parent = player.Character:FindFirstChild("HumanoidRootPart")
            HighlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            HighlightClone.Name = "Highlight"
        end
    end
end    
RunService.Heartbeat:Connect(function()
    ApplyToCurrentPlayers()
end)
end)
Section:NewButton("ESP V2", " ", function()
    local color = BrickColor.new(50,0,250)
local transparency = .8

local Players = game:GetService("Players")
local function _ESP(c)
  repeat wait() until c.PrimaryPart ~= nil
  for i,p in pairs(c:GetChildren()) do
    if p.ClassName == "Part" or p.ClassName == "MeshPart" then
      if p:FindFirstChild("shit") then p.shit:Destroy() end
      local a = Instance.new("BoxHandleAdornment",p)
      a.Name = "shit"
      a.Size = p.Size
      a.Color = color
      a.Transparency = transparency
      a.AlwaysOnTop = true    
      a.Visible = true    
      a.Adornee = p
      a.ZIndex = true    

    end
  end
end
local function ESP()
  for i,v in pairs(Players:GetChildren()) do
    if v ~= game.Players.LocalPlayer then
      if v.Character then
        _ESP(v.Character)
      end
      v.CharacterAdded:Connect(function(chr)
        _ESP(chr)
      end)
    end
  end
  Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(chr)
      _ESP(chr)
    end)  
  end)
end
ESP()
end)
Section:NewButton("ESP Not Team", "", function()
    -- instancing
local drawing_new = Drawing.new
local instance_new = Instance.new

-- workspace
local vector2_new = Vector2.new
local vector3_new = Vector3.new
local cframe_new = CFrame.new
local cframe_angles = CFrame.Angles
local raycast_params_new = RaycastParams.new
local raycast = workspace.Raycast

-- color
local color3_rgb = Color3.fromRGB
local color3_hsv = Color3.fromHSV
local color3_new = Color3.new

-- math
local math_floor = math.floor
local math_ceil = math.ceil
local math_atan2 = math.atan2
local math_rad = math.rad
local math_random = math.random
local math_randomseed = math.randomseed

-- string
local string_char = string.char
local string_format = string.format

-- table
local table_sort = table.sort

-- task
local task_wait = task.wait

-- namecall
local gdbd = game.GetDebugId
local get_children = game.GetChildren
local get_descendants = game.GetDescendants
local find_first_child_of_class = game.FindFirstChildOfClass
local find_first_child = game.FindFirstChild
local is_descendant_of = game.IsDescendantOf
local world_to_view_point = find_first_child_of_class(workspace, "Camera").WorldToViewportPoint
local point_world_space = cframe_new().pointToWorldSpace
local point_object_space = cframe_new().pointToObjectSpace
local vector_world_space = cframe_new().vectorToWorldSpace
local is_a = game.IsA

-- globals
local workspace = workspace
local pairs = pairs
local pcall = pcall
local tostring = tostring
local tick = tick
local getgenv = getgenv
local mousemoverel = mousemoverel
local mouse1press = mouse1press
local mouse1release = mouse1release

-- random
math_randomseed(tick())
function random_string(len)
	local str = ""
	for i = 1, len do
		str = str .. string_char(math_random(97, 122))
	end
	return str
end

getgenv().render_loop_stepped_name = renderloop_stepped_name or random_string(math_random(15, 35))
getgenv().update_loop_stepped_name = update_loop_stepped_name or random_string(math_random(15, 35))

-- services
local players = game:GetService("Players")
local run_service = game:GetService("RunService")
local uis = game:GetService("UserInputService")

-- other
local local_player = players.LocalPlayer
local mouse = local_player:GetMouse()

local cam = find_first_child_of_class(workspace, "Camera")

local screen_size = cam.ViewportSize
local center_screen = vector2_new(screen_size.X / 2, screen_size.Y / 2)

local enum_rft_blk = Enum.RaycastFilterType.Blacklist
local glass = Enum.Material.Glass

local white = color3_rgb(255, 255, 255)
local green = color3_rgb(0, 255, 0)

local dummy_part = instance_new("Part", nil)

drawing_new("Square").Visible = false -- initialize drawing lib

local pi = math.pi

-- dont touch lol
local custom_players = true
local refresh_que = false
local start_aim = false
local aim_head = false
local added_fov = 0

-- execute to apply
local options = {
    -- global settings
    frame_delay = 10, -- delay between rendering each frame (in miliseconds)
    refresh_delay = 0.25, -- delay between refreshing script (in seconds)
    max_dist = 9e9, -- 9e9 = very big
    team_check = true,
    wall_check = true,
    
    loop_all_humanoids = false, -- loop through workspace to find npc's to lock onto
    ignore_player_humanoids = true, -- will not lock onto/esp players (only if loop_all_humanoids is enabled)

    -- ui settings (sort of ui)
    fov_circle = true,
    aiming_at = true,

    -- aimbot settings
    aimbot = false,
    smoothness = 3,
    fov = 0,
    fov_increase_on_aim = 0, -- increases your fov by this value while the aimbot is active
    rage_mode = false, -- disregards fov, smoothness, odds and will lock onto people behind you

    -- aim type settings
    mouse_emulation = true, -- the default, will emulate user input (and is more natural)
    camera_cframe = false, -- aimlock, easier to detect, does not obey the smoothness setting but locks instantly

    -- will not lock on to people with this *username*, do not use a displayname for this, use the username
    ignore_people = {
        ["name"] = true, -- example of how you would exclude someone
    },

    -- will try to prefire when aiming
    triggerbot = false,

    -- aimbot activation settings
    acts_as_toggle = false,
    
    -- https://developer.roblox.com/en-us/api-reference/enum/UserInputType
    mouse_key = Enum.UserInputType["MouseButton2"],
    -- how to disable: mouse_key = nil,
    -- how to enable: mouse_key = Enum.UserInputType["*"],

    -- https://developer.roblox.com/en-us/api-reference/enum/KeyCode
    keyboard_key = Enum.KeyCode["E"],
    -- how to disable: keyboard_key = nil,
    -- how to enable: keyboard_key = Enum.KeyCode["*"],

    -- headshot odds
    headshot_chance = 100, -- odds for aiming on the head in percentage, 0 = no head (lol) and 100 = always head
    update_on_refresh_delay = false, -- less nauseating, will recalculate odds every refresh instead of every frame

    -- aiming prioritization options
    looking_at_you = false, -- whoever is most likely to hit you
    closest_to_center_screen = true,
    closest_to_you = false,

    -- taxing, usually useless, will iterate backwards through players list if the "best player to lock onto" cant be locked onto
    backwards_iteration = false,

    -- global esp settings
    esp = true,
    esp_thickness = 2,
    
    -- esp settings
    tracers = true,
    box = true,

    -- overhead esp settings
    overhead = true, -- disables name health and distance entirely
    name = true,
    distance = true,
    health = true,
    outline = true, -- text outline, laggier

    -- rainbow settings
    rainbow = false,
    rainbow_speed = 5, -- lower is faster, 0.000001 is the lowest you can go

    -- looking_at_tracer settings (lat = looking_at_tracer in short)
    looking_at_tracer = true, -- will show where a player is looking

    --https://www.google.com/search?q=color+picker
    lat_color = color3_rgb(200, 0, 255), -- color in rgb
    lat_thickness = 2,
    lat_length = 3, -- how far the tracer will go (in studs)
    
    -- crosshair settings
    crosshair = false,

    crosshair_distance = 4,
    crosshair_thickness = 1,
    crosshair_length = 8;
}

-- script already running?
if remove_all_esp then
    run_service:UnbindFromRenderStep(render_loop_stepped_name)
    run_service:UnbindFromRenderStep(update_loop_stepped_name)

    task_wait() -- wait for a frame to pass

    remove_all_esp()

    if descendant_hum_added then
        descendant_hum_added:Disconnect()
        descendant_hum_removing:Disconnect()
        player_name_added:Disconnect()
        player_name_removed:Disconnect()
    end

    player_added:Disconnect()
    player_removed:Disconnect()

    input_began:Disconnect()
    input_ended:Disconnect()

    getgenv().remove_all_esp = nil

    return;
end

-- how the script will find the players
local characters = {}
local player_names = {}

local function get_players()
    local place = game.PlaceId

    if options.loop_all_humanoids then
        if not player_names[local_player.Name] then -- ran for the first time
            -- get player names
            for _, val in pairs(get_children(players)) do
                player_names[val.Name] = true
            end

            getgenv().player_name_added = players.ChildAdded:Connect(function(added)
                player_names[added.Name] = true
            end)

            getgenv().player_name_removed = players.ChildRemoved:Connect(function(added)
                player_names[added.Name] = nil
            end)

            -- get players with events
            for _, val in pairs(workspace:GetDescendants()) do
                if is_a(val, "Humanoid") and val.Parent ~= local_player.Character and not (options.ignore_player_humanoids and player_names[val.Parent.Name]) then
                    characters[gdbd(val.Parent)] = val.Parent
                end
            end

            getgenv().descendant_hum_added = workspace.DescendantAdded:Connect(function(added)
                if is_a(added, "Humanoid") and added.Parent ~= local_player.Character and not (options.ignore_player_humanoids and player_names[added.Parent.Name]) then
                    characters[gdbd(added.Parent)] = added.Parent
                end
            end)
            
            getgenv().descendant_hum_removing = workspace.DescendantRemoving:Connect(function(removing)
                if is_a(removing, "Humanoid") then
                    characters[gdbd(removing.Parent)] = nil
                end
            end)
        end

        return characters
    end

    if place == 292439477 then -- phantom forces
        local leaderboard = local_player.PlayerGui.Leaderboard.Main

        if leaderboard then
            if options.team_check then
                local is_ghost = pcall(function()
                    return leaderboard.Ghosts.DataFrame.Data[local_player.Name]
                end)
                
                return get_children(workspace.Players[(is_ghost and "Bright blue") or "Bright orange"])
            else
                local instance_table = {}

                for idx, val in pairs(get_children(workspace.Players["Bright blue"])) do
                    if is_a(val, "Model") then
                        instance_table[#instance_table + 1] = val
                    end
                end

                for idx, val in pairs(get_children(workspace.Players["Bright orange"])) do
                    if is_a(val, "Model") then
                        instance_table[#instance_table + 1] = val
                    end
                end

                return instance_table -- return both teams
            end
        end

        return {} -- wtf???
    end

    if place == 3837841034 then
        return get_children(workspace.characters)
    end

    if place == 5938036553 then
        local chars = {}

        for _, val in pairs(get_children(workspace)) do
            if val.Name == "r15_rig" then
                chars[#chars + 1] = val
            end
        end

        return chars
    end

    custom_players = false
    return get_children(players)
end

local aiming = {
    fov_circle_obj = nil,
    line = nil,
    circle = nil;
}

local crosshair = {
    top = nil,
    bottom = nil,
    right = nil,
    left = nil;
}

local players_table = {}
local tracers = {}
local quads = {}
local overheads = {}
local looking_at_tracers = {}

-- needed functions
local function to_screen(vec3)
    local screen_pos, in_screen = world_to_view_point(cam, vec3)
    
    return vector2_new(screen_pos.X, screen_pos.Y), in_screen, screen_pos, options.rage_mode
end

local function get_part_corners(part)
    local size = part.Size * vector3_new(1, 1.5, 0)

    local cf = part.CFrame

    return {
        top_right = (cf * cframe_new(-size.X, -size.Y, 0)).Position,
        bottom_right = (cf * cframe_new(-size.X, size.Y, 0)).Position,
        top_left = (cf * cframe_new(size.X, -size.Y, 0)).Position,
        bottom_left = (cf * cframe_new(size.X, size.Y, 0)).Position,
    }
end

local function new_drawing(class_name)
    return function(props)
        local inst = drawing_new(class_name)

        for idx, val in pairs(props) do
            if idx ~= "instance" then
                inst[idx] = val
            end
        end
        
        return inst
    end
end

local function add_or_update_instance(tbl, child, props)
    local inst = tbl[child]
    if not inst then
        tbl[child] = new_drawing(props.instance)(props)

        return inst;
    end

    for idx, val in pairs(props) do
        if idx ~= "instance" then
            inst[idx] = val
        end
    end

    return inst
end

local function get_rainbow()
    return color3_hsv((tick() % options.rainbow_speed / options.rainbow_speed), 1, 1)
end

local function remove_esp(idx)
    add_or_update_instance(tracers, idx, {
        Visible = false,
        instance = "Line"
    })

    add_or_update_instance(quads, idx, {
        Visible = false,
        instance = "Quad"
    })

    add_or_update_instance(overheads, idx, {
        Visible = false,
        instance = "Text"
    })

    add_or_update_instance(looking_at_tracers, idx, {
        Visible = false,
        instance = "Line"
    })
end

local ignored_instances = {}

local raycast_params = raycast_params_new()
raycast_params.FilterType = enum_rft_blk
raycast_params.IgnoreWater = true

local function can_hit(origin_pos, part)
    if not options.wall_check then
        return true
    end

    local ignore_list = {cam, local_player.Character}

    for idx, val in pairs(ignored_instances) do
        ignore_list[#ignore_list + 1] = val
    end

    raycast_params.FilterDescendantsInstances = ignore_list
    
    local raycast_result = raycast(workspace, origin_pos, (part.Position - origin_pos).Unit * options.max_dist, raycast_params)

    local result_part = ((raycast_result and raycast_result.Instance) or dummy_part)

    if result_part ~= dummy_part then
        if result_part.Transparency >= 0.3 then -- ignore low transparency
            ignored_instances[#ignored_instances + 1] = result_part
        end

        if result_part.Material == glass then -- ignore glass
            ignored_instances[#ignored_instances + 1] = result_part
        end
    end

    return is_descendant_of(result_part, part.Parent)
end

local function hitting_what(origin_cframe)
    if not options.wall_check then
        return dummy_part
    end

    local ignore_list = {cam, local_player.Character}

    for idx, val in pairs(ignored_instances) do
        ignore_list[#ignore_list + 1] = val
    end
    
    raycast_params.FilterDescendantsInstances = ignore_list
    
    local raycast_result = raycast(workspace, origin_cframe.p, origin_cframe.LookVector * options.max_dist, raycast_params)

    local result_part = ((raycast_result and raycast_result.Instance) or dummy_part)
    
    if result_part ~= dummy_part then
        if result_part.Transparency >= 0.3 then -- ignore low transparency
            ignored_instances[#ignored_instances + 1] = result_part
        end

        if result_part.Material == glass then -- ignore glass
            ignored_instances[#ignored_instances + 1] = result_part
        end
    end

    return result_part
end

local function is_inside_fov(point)
    return options.rage_mode or ((point.x - center_screen.X) ^ 2 + (point.y - center_screen.Y) ^ 2 <= aiming.fov_circle_obj.Radius ^ 2)
end

local function chanced() -- shanced 2 - 0 gf *tabs*
    return options.rage_mode or math_random(1, 100) <= options.headshot_chance
end

local function screen_height(yval)
    if yval > (screen_size.Y / 2) then
        return -0.5
    end

    return 0.5
end

local function _refresh()
    for idx in pairs(tracers) do -- hide all esp instances
        remove_esp(idx)
    end

    players_table = get_players() -- fetch new player list
end

local function refresh()
    refresh_que = true -- queue refresh before next render
end

-- player events
getgenv().player_added = players.ChildAdded:Connect(refresh)
getgenv().player_removed = players.ChildRemoved:Connect(refresh)

-- aimbot triggers
getgenv().input_began = uis.InputBegan:Connect(function(input)
    if input.KeyCode == options.keyboard_key then
        if options.acts_as_toggle then
            start_aim = not start_aim
        else
            start_aim = false
        end

        if options.fov_increase_on_aim > 0 then
            for i = 1, options.fov_increase_on_aim * 0.3 do
                added_fov = added_fov + 3
                task_wait()
            end

            added_fov = options.fov_increase_on_aim
        end
    end

    if input.UserInputType == options.mouse_key then
        if options.acts_as_toggle then
            start_aim = not start_aim
        else
            start_aim = true
        end

        if options.fov_increase_on_aim > 0 then
            for i = 1, options.fov_increase_on_aim * 0.3 do
                added_fov = added_fov + 3
                task_wait()
            end

            added_fov = options.fov_increase_on_aim
        end
    end
end)

getgenv().input_ended = uis.InputEnded:Connect(function(input)
    if input.KeyCode == options.keyboard_key then
        if not options.acts_as_toggle then
            start_aim = false
        end

        if options.fov_increase_on_aim > 0 then
            for i = 1, options.fov_increase_on_aim * 0.3 do
                added_fov = added_fov - 3
                
                task_wait()
            end

            added_fov = 0
        end
    end

    if input.UserInputType == options.mouse_key then
        if not options.acts_as_toggle then
            start_aim = false
        end

        if options.fov_increase_on_aim > 0 then
            for i = 1, options.fov_increase_on_aim * 0.3 do
                added_fov = added_fov - 3

                task_wait()
            end

            added_fov = 0
        end
    end
end)

local last_tick = 0;

local function stepped()
    if (tick() - last_tick) > (options.frame_delay / 1000) then
        last_tick = tick()

        if refresh_que then -- refresh queed?
            _refresh()
            
            refresh_que = false
        end

        add_or_update_instance(aiming, "fov_circle_obj", {
            Visible = options.fov_circle,
            Thickness = options.esp_thickness,
            Radius = options.fov + added_fov,
            Position = center_screen,
            Color = (options.rainbow and get_rainbow()) or white,
            instance = "Circle";
        })
    
        add_or_update_instance(crosshair, "top", {
            Visible = options.crosshair,
            Thickness = options.crosshair_thickness,
            From = vector2_new(center_screen.X, center_screen.Y - options.crosshair_length - options.crosshair_distance),
            To = vector2_new(center_screen.X, center_screen.Y - options.crosshair_distance),
            Color = (options.rainbow and get_rainbow()) or white,
            instance = "Line";
        })
    
        add_or_update_instance(crosshair, "bottom", {
            Visible = options.crosshair,
            Thickness = options.crosshair_thickness,
            From = vector2_new(center_screen.X, center_screen.Y + options.crosshair_length + options.crosshair_distance + 1),
            To = vector2_new(center_screen.X, center_screen.Y + options.crosshair_distance + 1),
            Color = (options.rainbow and get_rainbow()) or white,
            instance = "Line";
        })
    
        add_or_update_instance(crosshair, "left", {
            Visible = options.crosshair,
            Thickness = options.crosshair_thickness,
            From = vector2_new(center_screen.X - options.crosshair_length - options.crosshair_distance, center_screen.Y),
            To = vector2_new(center_screen.X - options.crosshair_distance, center_screen.Y),
            Color = (options.rainbow and get_rainbow()) or white,
            instance = "Line";
        })
        
        add_or_update_instance(crosshair, "right", {
            Visible = options.crosshair,
            Thickness = options.crosshair_thickness,
            From = vector2_new(center_screen.X + options.crosshair_length + options.crosshair_distance + 1, center_screen.Y),
            To = vector2_new(center_screen.X + options.crosshair_distance + 1, center_screen.Y),
            Color = (options.rainbow and get_rainbow()) or white,
            instance = "Line";
        })

        local closers_chars = {}

        for _, plr in pairs(players_table) do
            local id = gdbd(plr)

            if plr == local_player then continue; end

            if options.ignore_people[plr.Name] then continue; end

            if options.team_check and not options.loop_all_humanoids and not custom_players and plr.Team then
                if plr.TeamColor == local_player.TeamColor then remove_esp(id); continue; end
                if plr.Team == local_player.Team then remove_esp(id); continue; end
            end

            local plr_char = ((options.loop_all_humanoids or custom_players) and plr) or plr.Character
            if plr_char == nil then remove_esp(id); continue; end

            local root_part = 
                find_first_child(plr_char, "Torso") 
                or find_first_child(plr_char, "UpperTorso") 
                or find_first_child(plr_char, "LowerTorso") 
                or find_first_child(plr_char, "HumanoidRootPart") 
                or find_first_child(plr_char, "Head") 
                or find_first_child_of_class(plr_char, "BasePart")
                
            if root_part == nil then remove_esp(id); continue; end
            if not is_a(root_part, "BasePart") then remove_esp(id); continue; end
            
            local head = find_first_child(plr_char, "Head") or root_part
            if not is_a(head, "BasePart") then continue; end

            local plr_screen, visible, scr_z = to_screen(head.Position)
            local mag = (head.Position - cam.CFrame.Position).Magnitude

            if mag > options.max_dist then remove_esp(id); continue; end

            if options.esp then
                local col = (options.rainbow and get_rainbow()) or white
                local corners = get_part_corners(root_part)

                local a_screen, a_visible = to_screen(corners.top_left)
                local b_screen, b_visible = to_screen(corners.top_right)
                local c_screen, c_visible = to_screen(corners.bottom_right)
                local d_screen, d_visible = to_screen(corners.bottom_left)

                if options.tracers then -- doesnt have a hide condition
                    local object_space_pos = point_object_space(cam.CFrame, vector3_new(
                        (corners.top_left.X + corners.top_right.X) / 2, 
                        (corners.top_left.Y + corners.top_right.Y) / 2, 
                        (corners.top_left.Z + corners.top_right.Z) / 2
                    ))
					
					if 0 > scr_z.Z then -- thanks unnamed esp for the math
						local angle = math_atan2(object_space_pos.Y, object_space_pos.X) + pi
                        object_space_pos = vector_world_space(cframe_angles(0, 0, angle), (cframe_angles(0, math_rad(89.99), 0).LookVector))
					end
					
					local tracer_pos = to_screen(point_world_space(cam.CFrame, object_space_pos))
                    
                    add_or_update_instance(tracers, id, {
                        Visible = options.esp,
                        Thickness = options.esp_thickness,
                        From = vector2_new(screen_size.X / 2, screen_size.Y - 36),
                        To = tracer_pos,
                        Color = (options.rainbow and get_rainbow()) or color3_new(255 / mag, mag / 255, 0),
                        instance = "Line";
                    })
                end

                if options.box then
                    if a_visible and b_visible and c_visible and d_visible then
                        add_or_update_instance(quads, id, {
                            Visible = options.esp,
                            Thickness = options.esp_thickness,
                            PointA = a_screen,
                            PointB = b_screen,
                            PointC = c_screen,
                            PointD = d_screen,
                            Color = col,
                            instance = "Quad";
                        })
                    else
                        add_or_update_instance(quads, id, {
                            Visible = false,
                            instance = "Quad";
                        })
                    end
                end

                if options.looking_at_tracer then
                    local a_head_src, a_visible = to_screen(head.Position)
                    local b_lv_src, b_visible = to_screen(head.Position + head.CFrame.LookVector * options.lat_length)

                    if a_visible and b_visible then
                        add_or_update_instance(looking_at_tracers, id, {
                            Visible = options.esp,
                            Thickness = options.lat_thickness,
                            To = a_head_src,
                            From = b_lv_src,
                            Color = options.lat_color or white,
                            instance = "Line";
                        })
                    else
                        add_or_update_instance(looking_at_tracers, id, {
                            Visible = false,
                            instance = "Line";
                        })
                    end
                end

                if options.overhead then
                    local text = "";

                    if options.health then
                        local hum = find_first_child_of_class(plr_char, "Humanoid")

                        if hum then
                            text = string_format("%s[%d/%d] ", text, math_ceil(hum.Health), math_ceil(hum.MaxHealth))
                        end
                    end

                    if options.distance then
                        text = string_format("%s[%d]\n", text, math_floor(mag))
                    end

                    if options.name then
                        text = string_format("%s%s ", text, plr.Name)
                    end
    
                    local head_screen, h_visible = to_screen(head.Position + head.CFrame.UpVector * 2)

                    if h_visible then
                        local obj = overheads[id]

                        add_or_update_instance(overheads, id, {
                            Visible = options.esp,
                            Outline = options.outline,
                            Center = true,
                            Position = head_screen - vector2_new(0, (obj and obj.TextBounds.Y) or 0),  
                            Text = text,
                            Color = col,
                            instance = "Text";
                        })
                    else
                        add_or_update_instance(overheads, id, {
                            Visible = false,
                            instance = "Text";
                        })
                    end
                end
            end

            if options.aimbot then
                if options.looking_at_you then
                    closers_chars[((head.Position + head.CFrame.LookVector * mag) - cam.CFrame.p).Magnitude] = plr_char
                elseif options.closest_to_center_screen then
                    closers_chars[(plr_screen - center_screen).Magnitude] = plr_char
                elseif options.closest_to_you then
                    closers_chars[mag] = plr_char
                end
            end
        end -- sort players, esp, teamcheck

        if not options.aimbot then return; end

        local mags = {}

        for idx in pairs(closers_chars) do
            mags[#mags + 1] = idx
        end

        table_sort(mags)

        local idx_sorted = {}

        for _, idx in pairs(mags) do
            idx_sorted[#idx_sorted + 1] = closers_chars[idx]
        end

        local run_aimbot = nil;
        run_aimbot = function(plr_offset)
            local char = idx_sorted[plr_offset]

            if char then
                local children = get_children(char)
                local parts = {}

                for _, obj in pairs(children) do
                    if is_a(obj, "BasePart") then
                        local part_screen, part_in_screen, _, rage = to_screen(obj.Position)

                        if can_hit(cam.CFrame.p, obj) and (part_in_screen or rage) and (is_inside_fov(part_screen) or rage) then
                            local set = {
                                part = obj,
                                screen = part_screen,
                                visible = part_in_screen;
                            }

                            parts[obj.Name] = set

                            parts[0] = set -- set last part
                        end
                    end
                end

                local chosen = nil;

                if not options.update_on_refresh_delay then
                    aim_head = chanced()
                end

                if parts["Head"] and aim_head then
                    chosen = parts["Head"]
                else
                    local torso = parts["Torso"] or parts["UpperTorso"] or parts["LowerTorso"]
                    if torso then
                        chosen = torso
                    else
                        chosen = parts["Head"] or parts[0] -- aim on head if odds are against the head, but the torso isnt visible, or on other visible part
                    end
                end
                
                if chosen then
                    local scale = (chosen.part.Size.Y / 2)

                    local top, top_z, top_visible = to_screen((chosen.part.CFrame * cframe_new(0, scale, 0)).Position);
                    local bottom, bottom_z, bottom_visible = to_screen((chosen.part.CFrame * cframe_new(0, -scale, 0)).Position);
                    local radius = -(top - bottom).y;

                    add_or_update_instance(aiming, "circle", {
                        Visible = top_visible and bottom_visible and options.aiming_at,
                        Thickness = options.esp_thickness,
                        Radius = radius / 2,
                        Position = chosen.screen,
                        Color = (options.rainbow and get_rainbow()) or (start_aim and green) or white,
                        instance = "Circle";
                    })

                    if start_aim then
                        add_or_update_instance(aiming, "line", {
                            Visible = options.aiming_at,
                            Thickness = options.esp_thickness,
                            From = center_screen,
                            To = chosen.screen,
                            Color = (options.rainbow and get_rainbow()) or (start_aim and green) or white,
                            instance = "Line";
                        })

                        local smoothness = (options.rage_mode and 1) or options.smoothness

                        if chosen.visible then
                            if options.mouse_emulation then
                                mousemoverel((chosen.screen.X - mouse.X) / smoothness, (chosen.screen.Y - (mouse.Y + 36)) / smoothness)
                            elseif options.camera_cframe then
                                cam.CFrame = cframe_new(cam.CFrame.p, chosen.part.Position)
                            end
                        elseif options.rage_mode then
                            if options.mouse_emulation then
                                mousemoverel(screen_size.X / 4, (chosen.screen.Y - (mouse.Y + 36)) * screen_height(mouse.Y))
                            elseif options.camera_cframe then
                                cam.CFrame = cframe_new(cam.CFrame.p, chosen.part.Position)
                            end
                        end

                        if options.triggerbot then
                            if is_descendant_of(hitting_what(cam.CFrame), chosen.part.Parent) then
                                mouse1press()
                            else
                                mouse1release()
                            end
                        end

                        return;
                    else
                        if options.triggerbot then
                            mouse1release()
                        end
                        
                        add_or_update_instance(aiming, "line", {
                            Visible = false,
                            instance = "Line";
                        })

                        return;
                    end -- aiming?

                    return; -- part is on screen, and in fov, no need to find a new player, loop ends here
                end -- part exists?

                if options.triggerbot then
                    mouse1release()
                end

                add_or_update_instance(aiming, "line", {
                    Visible = false,
                    instance = "Line";
                })

                add_or_update_instance(aiming, "circle", {
                    Visible = false,
                    instance = "Circle";
                })

                if options.backwards_iteration then
                    run_aimbot(plr_offset + 1); -- previous player
                end
            end
        end

        run_aimbot(1);
    end
end

local last_refresh = 0;

run_service:BindToRenderStep(render_loop_stepped_name, 300, function()
    if (tick() - last_refresh) > options.refresh_delay then
        last_refresh = tick()

        if not cam or not cam.Parent or cam.Parent ~= workspace then
            cam = find_first_child_of_class(workspace, "Camera")

            world_to_view_point = cam.WorldToViewportPoint
        end

        if options.update_on_refresh_delay then
            aim_head = chanced()
        end

        refresh()
    end
end) -- refresher

run_service:BindToRenderStep(update_loop_stepped_name, 199, stepped)

-- kills esp
getgenv().remove_all_esp = function()
    for idx in pairs(tracers) do -- hide all esp instances
        remove_esp(idx)
    end

    -- aiming
    add_or_update_instance(aiming, "fov_circle_obj", {
        Visible = false,
        instance = "Circle";
    })

    add_or_update_instance(aiming, "circle", {
        Visible = false,
        instance = "Circle";
    })

    add_or_update_instance(aiming, "line", {
        Visible = false,
        instance = "Line";
    })
    
    -- crosshair
    add_or_update_instance(crosshair, "top", {
        Visible = false,
        instance = "Line";
    })

    add_or_update_instance(crosshair, "bottom", {
        Visible = false,
        instance = "Line";
    })

    add_or_update_instance(crosshair, "left", {
        Visible = false,
        instance = "Line";
    })
    
    add_or_update_instance(crosshair, "right", {
        Visible = false,
        instance = "Line";
    })
end
end)

Section:NewButton("AimBot Don't lock Team", " ", function()
    loadstring(game:HttpGet"https://raw.githubusercontent.com/Wheeleee/AIMWARE/main/Startup")()
end)
Section:NewButton("AimBot Fov", " ", function()
    local teamCheck = false
local fov = 150
local smoothing = 1

local RunService = game:GetService("RunService")

local FOVring = Drawing.new("Circle")
FOVring.Visible = true
FOVring.Thickness = 1.5
FOVring.Radius = fov
FOVring.Transparency = 1
FOVring.Color = Color3.fromRGB(255, 128, 128)
FOVring.Position = workspace.CurrentCamera.ViewportSize/2

local function getClosest(cframe)
   local ray = Ray.new(cframe.Position, cframe.LookVector).Unit
   
   local target = nil
   local mag = math.huge
   
   for i,v in pairs(game.Players:GetPlayers()) do
       if v.Character and v.Character:FindFirstChild("Head") and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") and v ~= game.Players.LocalPlayer and (v.Team ~= game.Players.LocalPlayer.Team or (not teamCheck)) then
           local magBuf = (v.Character.Head.Position - ray:ClosestPoint(v.Character.Head.Position)).Magnitude
           
           if magBuf < mag then
               mag = magBuf
               target = v
           end
       end
   end
   
   return target
end

loop = RunService.RenderStepped:Connect(function()
   local UserInputService = game:GetService("UserInputService")
   local pressed = --[[UserInputService:IsKeyDown(Enum.KeyCode.E)]] UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) --Enum.UserInputType.MouseButton2
   local localPlay = game.Players.localPlayer.Character
   local cam = workspace.CurrentCamera
   local zz = workspace.CurrentCamera.ViewportSize/2
   
   if pressed then
       local Line = Drawing.new("Line")
       local curTar = getClosest(cam.CFrame)
       local ssHeadPoint = cam:WorldToScreenPoint(curTar.Character.Head.Position)
       ssHeadPoint = Vector2.new(ssHeadPoint.X, ssHeadPoint.Y)
       if (ssHeadPoint - zz).Magnitude < fov then
           workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(CFrame.new(cam.CFrame.Position, curTar.Character.Head.Position), smoothing)
       end
   end
   
   if UserInputService:IsKeyDown(Enum.KeyCode.Delete) then
       loop:Disconnect()
       FOVring:Remove()
   end
end)
end)
Section:NewButton("script Banana", " ", function()
    loadstring(game:HttpGet("https://gist.githubusercontent.com/NovaVanity/131e258977e50e1ec0184c72818b8bfd/raw", true))()
end)
Section:NewButton("Speed 50", " ", function()
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 50
end)
Section:NewButton("ByPass Speed 100hack ", " ", function()
    -- if you play any games with good antiexploit that stops speed scripts you might wanna use this. (THIS DOSENT BYPASS EVERY GAME)
 
-- change the speed on where it says local walkspeed and feel free to add globals to it
 
local walkSpeed = 100
 
 
 
local gmt = getrawmetatable(game)
 
setreadonly(gmt, false)
 
local oldindex = gmt.__index
 
gmt.__index = newcclosure(function(self,b)
 
if b == "WalkSpeed" then
 
return 16
 
end
 
return oldindex(self,b)
 end)
game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = walkSpeed
end)

Section:NewButton("Ctrl+click ALT", " ", function()
    local Plr = game:GetService("Players").LocalPlayer
local Mouse = Plr:GetMouse()

Mouse.Button1Down:connect(function()
if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftAlt) then return end
if not Mouse.Target then return end
Mouse.Target:Destroy()
end)

end)
Section:NewButton("Ctrl+Tp", " ", function()
    local UIS = game:GetService("UserInputService")

local Player = game.Players.LocalPlayer
local Mouse = Player:GetMouse()


function GetCharacter()
   return game.Players.LocalPlayer.Character
end

function Teleport(pos)
   local Char = GetCharacter()
   if Char then
       Char:MoveTo(pos)
   end
end


UIS.InputBegan:Connect(function(input)
   if input.UserInputType == Enum.UserInputType.MouseButton1 and UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
       Teleport(Mouse.Hit.p)
   end
end)

end)
Section:NewButton("Hit Box kill Player Pass E", "", function()
    -- Variables
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

-- Settings

bind = "" 
bind2 = "e"

-- Script

mouse.KeyDown:connect(function(key)
if key == bind then
player.Character.HumanoidRootPart.CFrame = CFrame.new(1254.09656, 137.906067, -172.128204)
end
end)

mouse.KeyDown:connect(function(key2)
if key2 == bind2 then
_G.HeadSize = 10
_G.Disabled = true


if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 0.7
v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
v.Character.HumanoidRootPart.Material = "black"
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end
end)
end)
Section:NewButton("Invisible", " ", function()
    local offset = 1100
local invisible = game.Players.LocalPlayer
local grips = {}
local heldTool
local gripChanged
local handle
local weld
function setDisplayDistance(distance)
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChildWhichIsA("Humanoid") then
            player.Character:FindFirstChildWhichIsA("Humanoid").NameDisplayDistance = distance
            player.Character:FindFirstChildWhichIsA("Humanoid").HealthDisplayDistance = distance
        end
    end
end
local tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
tool.Name = "Invisible"
tool.RequiresHandle = false
tool.CanBeDropped = false
tool.Equipped:Connect(
    function()
        wait()
        if not invisible then
            invisible = true
            tool.Name = "Enabled Invisible"
            if handle then
                handle:Destroy()
            end
            if weld then
                weld:Destroy()
            end
            handle = Instance.new("Part", workspace)
            handle.Name = "Handle"
            handle.Transparency = 1
            handle.CanCollide = false
            handle.Size = Vector3.new(2, 1, 1)
            weld = Instance.new("Weld", handle)
            weld.Part0 = handle
            weld.Part1 = game.Players.LocalPlayer.Character.HumanoidRootPart
            weld.C0 = CFrame.new(0, offset - 1.5, 0)
            setDisplayDistance(offset + 100)
            workspace.CurrentCamera.CameraSubject = handle
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, offset, 0)
            game.Players.LocalPlayer.Character.Humanoid.HipHeight = offset
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
            for _, child in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                if child:IsA("Tool") and child ~= tool then
                    grips[child] = child.Grip
                end
            end
        elseif invisible then
            invisible = false
            tool.Name = "Disabled Invisible"
            if handle then
                handle:Destroy()
            end
            if weld then
                weld:Destroy()
            end
            for _, child in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if child:IsA("Tool") then
                    child.Parent = game.Players.LocalPlayer.Backpack
                end
            end
            for tool, grip in pairs(grips) do
                if tool then
                    tool.Grip = grip
                end
            end
            heldTool = nil
            setDisplayDistance(100)
            workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -offset, 0)
            game.Players.LocalPlayer.Character.Humanoid.HipHeight = 0
        end
        tool.Parent = game.Players.LocalPlayer.Backpack
    end
)
game.Players.LocalPlayer.Character.ChildAdded:Connect(
    function(child)
        wait()
        if invisible and child:IsA("Tool") and child ~= heldTool and child ~= tool then
            heldTool = child
            local lastGrip = heldTool.Grip
            if not grips[heldTool] then
                grips[heldTool] = lastGrip
            end
            for _, track in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
                track:Stop()
            end
            game.Players.LocalPlayer.Character.Animate.Disabled = true
            heldTool.Grip = heldTool.Grip * (CFrame.new(0, offset - 1.5, 1.5) * CFrame.Angles(math.rad(-90), 0, 0))
            heldTool.Parent = game.Players.LocalPlayer.Backpack
            heldTool.Parent = game.Players.LocalPlayer.Character
            if gripChanged then
                gripChanged:Disconnect()
            end
            gripChanged =
                heldTool:GetPropertyChangedSignal("Grip"):Connect(
                function()
                    wait()
                    if not invisible then
                        gripChanged:Disconnect()
                    end
                    if heldTool.Grip ~= lastGrip then
                        lastGrip =
                            heldTool.Grip * (CFrame.new(0, offset - 1.5, 1.5) * CFrame.Angles(math.rad(-90), 0, 0))
                        heldTool.Grip = lastGrip
                        heldTool.Parent = game.Players.LocalPlayer.Backpack
                        heldTool.Parent = game.Players.LocalPlayer.Character
                    end
                end
            )
        end
    end
)
end)
Section:NewButton("HipHeight2", " ", function()
    local library = loadstring(game:HttpGet("https://pastebin.com/raw/5hTCvJ7V",true))()
local main2 = library:CreateWindow('Hip Height')
local Other = main2:Section('Other')
local part2 = Instance.new("Part")
local hipHeightSlider = main2:Slider('Hip Height', {min = 0, max = 25, default = 0}, function(value)
    game:GetService('Players').LocalPlayer.Character.Humanoid.HipHeight = value
end)
end)
Section:NewButton("DEx", " ", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/BlackHoleKMT/InwGachar/main/Dungeon%20Quest!",true))();
end)
Section:NewButton("EvilMorty Command", " ", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/BlackHoleKMT/InwGachar/main/EvilMorty%20Comman",true))();
end)
local Section = Tab:NewSection("Esp")
Section:NewToggle("Enable ESP", "", function(arg)
    ESP.Enabled = arg
end)
Section:NewToggle("ESP Boxes", "", function(arg)
    ESP.Boxes = arg
end)
Section:NewToggle("ESP Names", "", function(arg)
    ESP.Names = arg
end)
Section:NewToggle("ESP TeamMates", "", function(arg)
    ESP.TeamMates = arg
end)
Section:NewToggle("ESP TeamColor", "", function(arg)
    ESP.TeamColor = arg
end)
Section:NewToggle("ESP FaceCamera", "", function(arg)
    ESP.FaceCamera = arg
end)
Section:NewToggle("ESP Tracers", "", function(arg)
    ESP.Tracers = arg
end)

-------------------------------------------------
local Tab = Window:NewTab("Murderers vs. Sheriffs")
local Section = Tab:NewSection("Hack")
Section:NewButton("kill All Players", "", function()
    getgenv().killAllKey = getgenv().killAllKey or Enum.KeyCode.V

-- init
if not game:IsLoaded() then 
    game.Loaded:Wait();
end

local service = setmetatable({}, {
    __index = function(self, index)
        return game.GetService(game, index);
    end
});

-- variables
local players, runService, userInputService, replicatedStorage = service.Players, service.RunService, service.UserInputService, service.ReplicatedStorage

local inputBegan = userInputService.InputBegan 
local postSimulation = runService.PostSimulation

local client = players.LocalPlayer 
local characterAdded = client.CharacterAdded 

local character = client.Character or characterAdded:Wait();
local rootPart = character and character:FindFirstChild("HumanoidRootPart");

local tool;
local remote;

local killAllToggled = true

-- functions
local function kill(player)
	if player.Team == client.Team then return end 

	local playerCharacter = player.Character 
	if not playerCharacter then return end 

	if playerCharacter:FindFirstChild("ForceField") then return end 

	local playerHumanoid = playerCharacter:FindFirstChildOfClass("Humanoid");
	if not playerHumanoid or playerHumanoid.Health == 0 then return end

	local playerRootPart = playerCharacter:FindFirstChild("HumanoidRootPart");
	if not playerRootPart then return end
		
	local arguments = tool.Name == "Knife" and {playerRootPart, "Throw"} or tool.Name == "Gun" and {playerRootPart, playerRootPart.Position, rootPart.Position}
	remote:FireServer(unpack(arguments));
end

local function onChildAdded(child)
	if child and child:IsA("Tool") and (child.Name == "Gun" or child.Name == "Knife") then
		tool = child  
		remote = tool:WaitForChild("Damage");
	end
end

-- connections 
character.ChildAdded:Connect(onChildAdded);

inputBegan:Connect(function(key)
	if userInputService:GetFocusedTextBox() then return end 

	if key.KeyCode == killAllKey then 
		killAllToggled = not killAllToggled
	end
end);

characterAdded:Connect(function(Character) 
	character = Character
	character:WaitForChild("Humanoid");

	rootPart = character:WaitForChild("HumanoidRootPart");
	character.ChildAdded:Connect(onChildAdded);
end);

postSimulation:Connect(function(deltaTime) 
	if killAllToggled and tool and remote then 
		for i = 1, #players:GetPlayers() do
			local player = players:GetPlayers()[i];
			if player == client then continue end 

			kill(player);
		end
	end
end);
end)
Section:NewButton("Hack", " ", function()
    getgenv().Key = "putkeyhere";
loadstring(game:HttpGet("https://gabescripts.com/access.lua"))()
end)
Section:NewButton("Teammurder", " ", function()
    local args = {
    [1] = "M"
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ChangeTeam"):InvokeServer(unpack(args))
end)
Section:NewButton("Team Sheriffs", " ", function()
    local args = {
    [1] = "S"
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ChangeTeam"):InvokeServer(unpack(args))

end)



---------------------------------------------------
local Tab = Window:NewTab("Funtion")
local Section = Tab:NewSection("Help")
Section:NewToggle("Rejoinserver", "", function()
	local ts = game:GetService("TeleportService")

local p = game:GetService("Players").LocalPlayer



ts:TeleportToPlaceInstance(game.PlaceId, game.JobId, p)
end)
Section:NewToggle("HopServerNew", "", function()
	local Player = game.Players.LocalPlayer    
local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"

local _place,_id = game.PlaceId, game.JobId
local _servers = Api.._place.."/servers/Public?sortOrder=Desc&limit=100"
function ListServers(cursor)
   local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
   return Http:JSONDecode(Raw)
end

local Next; repeat
   local Servers = ListServers(Next)
   for i,v in next, Servers.data do
       if v.playing < v.maxPlayers and v.id ~= _id then
           local s,r = pcall(TPS.TeleportToPlaceInstance,TPS,_place,v.id,Player)
           if s then break end
       end
   end
   
   Next = Servers.nextPageCursor
until not Next
end)
Section:NewToggle("Hop Server go toPlayers 1-5 P", "", function()
	Time = 1 -- seconds
repeat wait() until game:IsLoaded()
wait(Time)
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
function TPReturner()
   local Site;
   if foundAnything == "" then
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
   else
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
   end
   local ID = ""
   if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
       foundAnything = Site.nextPageCursor
   end
   local num = 0;
   for i,v in pairs(Site.data) do
       local Possible = true
       ID = tostring(v.id)
       if tonumber(v.maxPlayers) > tonumber(v.playing) then
           for _,Existing in pairs(AllIDs) do
               if num ~= 0 then
                   if ID == tostring(Existing) then
                       Possible = false
                   end
               else
                   if tonumber(actualHour) ~= tonumber(Existing) then
                       local delFile = pcall(function()
                           delfile("NotSameServers.json")
                           AllIDs = {}
                           table.insert(AllIDs, actualHour)
                       end)
                   end
               end
               num = num + 1
           end
           if Possible == true then
               table.insert(AllIDs, ID)
               wait()
               pcall(function()
                   writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                   wait()
                   game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
               end)
               wait(4)
           end
       end
   end
end

function Teleport()
   while wait() do
       pcall(function()
           TPReturner()
           if foundAnything ~= "" then
               TPReturner()
           end
       end)
   end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport()
end)
---------------------------------------------------
local Tab = Window:NewTab("Murder Mystery 2")
local Section = Tab:NewSection("Funtion")
Section:NewButton("Script", "", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Ethanoj1/EclipseMM2/master/Script", true))()
end)
---------------------------------------------------
local Tab = Window:NewTab("FE Neko+Command")
local Section = Tab:NewSection("Funtion")
Section:NewButton("Command", "", function()
   loadstring(game:HttpGet(('https://raw.githubusercontent.com/iK4oS/backdoor.exe/master/source.lua'),true))()
end)
Section:NewButton("Neko V5", "", function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/Tescalus/Pendulum-Hubs-Source/main/Pendulum%20Hub%20V5.lua"))()
end)
Section:NewButton("script All", "", function()
    
 
 
 
 
 
wait(0.2)
local function callback(text)
    if text == "Yes" then
	print("User said yes")
    elseif text == "No" then
	print("User said no")
    end
end
 
local bindableFunction= Instance.new("BindableFunction")
 
game.StarterGui:SetCore("SendNotification", {
    Title = "MADE BY: shad0w_Tyler8";
    Text = "display name: mythical_shad0w";
    Duration = "2";
    callbakc = bindableFunction;
    Button1 = "OK";
 
})
 
wait(3.5)
game.StarterGui:SetCore("SendNotification", {
Title = "LOADED Shadow scripts V2 "; -- the title 
Text = "thanks for using my script (some scripts have the name of their owner) "; -- what the text says 
Duration = 2; -- how long the notification should in secounds
})
 
wait(0.1)
 
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
 
local Window = Library.CreateLib("Shadows Scripts HUB V2", "GrapeTheme")
 
local Tab = Window:NewTab("| MAIN |")
 
local Section = Tab:NewSection("random scripts ")
 
Section:NewButton("FLY GUI V3 MODDED", "script owner: me_ozone modifier: shad0w_TYLER8", function()
loadstring(game: HttpGet('https://pastebin.com/raw/3UYg1qqb'))()
end)
 
Section:NewButton("Nameless animation V3 -My World (read info)", "keybinds: F R T Q | this script was not made by me", function()
loadstring(game:HttpGet("https://pastebin.com/raw/CsKA3L8Z"))()
end)
 
Section:NewButton("OP | PRISON LIFE SCRIPT", "-when does prison life update? never....", function()
loadstring(game: HttpGet('https://pastebin.com/raw/VUzUCJGf'))()
end)
 
Section:NewButton("NUKER MOD GUI da hood(script owner in info)", "Made by tokixqp#3489 and Lucifear#0001", function()
loadstring(game: HttpGet('https://pastebin.com/raw/DDXCeVtk'))()
end)
 
Section:NewButton("KEYBOARD SCRIPT", "Made by Kokjindesu", function()
loadstring(game: HttpGet('https://pastebin.com/raw/YtdxEz0q'))()
end)
 
Section:NewButton("Doors script made by darkrai", "cool script for doors.... yeaahh", function()
loadstring(game: HttpGet('https://pastebin.com/raw/wm4eQSUQ'))()
end)
 
Section:NewButton("Infinite Yield FE", "MY FAVORITE SCRIPT", function()
loadstring(game: HttpGet('https://pastebin.com/raw/8fUy5TBM'))()
end)
 
Section:NewButton("OP | PRISON LIFE SCRIPT XtheMasterX", "SUPER OP", function()
loadstring(game: HttpGet('https://raw.githubusercontent.com/XTheMasterX/Scripts/Main/PrisonLife'))()
end)
 
 
 
local Tab2 = Window:NewTab("| PLAYER |")
 
local Section2 = Tab2:NewSection("Keyboards / cursor mobile ")
 
Section2:NewSlider("Speed", "Set you speed", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)
 
Section2:NewButton("FE | Giant script R15 (read info)", "keep your character's body proportions at maximum", function()
loadstring(game: HttpGet('https://pastebin.com/raw/2s98PrEE'))()
end)
 
Section2:NewButton("set Shift lock ", "only for mobile", function()
loadstring(game: HttpGet('https://pastebin.com/raw/792svEcC'))()
end)
 
Section2:NewButton("Telekinesis Script (need cursor script)", "a", function()
loadstring(game: HttpGet('https://pastebin.com/raw/Z33NcECh'))()
end)
 
 
local Tab3 = Window:NewTab("‚Ä¢ R6 ANIM SCRIPTS ‚Ä¢")
 
local Section3 = Tab3:NewSection("R6 ANIMATIONS")
 
Section3:NewButton("nameless animation V3", "BEST ANIMATION SCRIPT <3", function()
loadstring(game: HttpGet('https://pastebin.com/raw/CsKA3L8Z'))()
end)
 
Section3:NewButton("R6 ANIMATIONS GUI", "try nameless v3", function()
loadstring(game: HttpGet('https://pastebin.com/raw/vbJsvU0L'))()
end)
 
local Tab4 = Window:NewTab("‚Ä¢ R15 ANIM SCRIPTS ‚Ä¢")
 
local Section4 = Tab4:NewSection("R15 ANIMATIONS")
 
Section4:NewButton("R15 ANIMATIONS GUI + music gui", "R6 is better", function()
loadstring(game: HttpGet('https://pastebin.com/raw/tSmUTPXD'))()
end)
 
Section4:NewButton("FE R15 animations (read info)", "use Rthro animation to work", function()
loadstring(game: HttpGet('https://pastebin.com/raw/mbj17A7p'))()
end)
 
local Tab5 = Window:NewTab("‚Ä¢ FLING SCRIPTS ‚Ä¢")
 
local Section5 = Tab5:NewSection("fling scripts")
 
Section5:NewButton("FE CONTROLLER FLING (read info) ", "u need a backpack called 8-bit controller backpack", function()
loadstring(game: HttpGet('https://pastebin.com/raw/XRxfvKmR'))()
end)
 
Section5:NewButton("FE troll fling gui", "YEET!", function()
loadstring(game: HttpGet('https://pastebin.com/raw/XRxfvKmR'))()
end)
 
Section5:NewButton("FE ultimate fling gui", "fling your enemies!", function()
loadstring(game: HttpGet('https://pastebin.com/raw/r97d7dS0'))()
end)
 
Section5:NewButton("FE invisible fling (press Z to execute)", "fling your enemies!", function()
loadstring(game: HttpGet('https://pastebin.com/raw/B9G4qHGy'))()
end)
 
local Tab6 = Window:NewTab("DA HOOD")
 
local Section6 = Tab6:NewSection("Da hood scripts ")
 
Section6:NewButton("Unticled Hood V4.1", "BIGGEST GUI I HAVE EVER SEEN", function()
loadstring(game: HttpGet('https://pastebin.com/raw/JDeTFWrm'))()
end)
 
Section6:NewButton("Da hood VORTEX GUI", "this is cool", function()
loadstring(game: HttpGet('https://raw.githubusercontent.com/ImagineProUser/vortexdahood/main/vortex'))()
end)
 
Section6:NewButton("NUKER MOD GUI da hood(script owner in info)", "Made by tokixqp#3489 and Lucifear#0001", function()
loadstring(game: HttpGet('https://pastebin.com/raw/DDXCeVtk'))()
end)
 
local Tab7 = Window:NewTab("PLS DONATE")
 
local Section7 = Tab7:NewSection("Pls donate scripts ")
 
Section7:NewButton("PLS DONATE GUI", "LETS GET SOME BEBUX BOIIII", function()
loadstring(game: HttpGet('https://pastebin.com/raw/jT3VNw1K'))()
end)
 
Section7:NewButton("Pls donate Fake donation", " idk ", function()
loadstring(game: HttpGet('https://raw.githubusercontent.com/o5u3/PLS-Donate/main/Fake-Donate.lua'))()
end)
 
local Tab8 = Window:NewTab("Sus scripts")
 
local Section8 = Tab8:NewSection("sus script | animations | nekos | +")
 
 
Section8:NewButton("Pendulum Hub", " roblox thinks his game is for kids right? ", function()
loadstring(game: HttpGet('https://raw.githubusercontent.com/Tescalus/Pendulum-Hubs-Source/main/Pendulum%20Hub%20V5.lua'))()
end)
 
Section8:NewButton("Sussy hub", " roblox thinks his game is for kids right? ", function()
loadstring(game: HttpGet('https://gist.githubusercontent.com/Nilrogram/8b0c8bd710be142f383c71f79279752c/raw/e4fb01a7de7cd498bb53270d2ad191dfab268a88/FE%2520SussyHub'))()
end)
 
local Tab9 = Window:NewTab("EVADE")
 
local Section9 = Tab9:NewSection("Evade scripts ")
 
Section9:NewButton("Evade gui", "idk", function()
loadstring(game: HttpGet('https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Evade/main.lua'))()
end)
 
Section9:NewButton("OP | Evade Gui (need Key)", "cool script but need Key :(", function()
loadstring(game: HttpGet('https://pastebin.com/raw/uBvmEkWB'))()
end)
 
Section9:NewButton("OP | Evade Script GUI (need join discord server)", "WOW", function()
loadstring(game: HttpGet('https://raw.githubusercontent.com/Robobo2022/script/main/Main.lua'))()
end)
 
Section9:NewButton("Darkrai-X Evade script", "", function()
loadstring(game: HttpGet('https://raw.githubusercontent.com/GamingScripter/Darkrai-X/main/Games/Evade'))()
end)
 
 
 
local Tab10 = Window:NewTab("Keyboards")
 
local Section10 = Tab10:NewSection("Keyboard | mobile cursor  ")
 
Section10:NewButton("Keyboard", "made by Kokjindesu", function()
loadstring(game: HttpGet('https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt'))()
end)
 
Section10:NewButton("mobile cursor", "mobile now have cursor haha", function()
loadstring(game: HttpGet('https://pastefy.ga/V75mqzaz/raw'))()
end)
end)
---------------------------------------------------
local Tab = Window:NewTab("Toxic script")
local Section = Tab:NewSection("use Q Run or off")
Section:NewButton("Bypass chat", " ", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/synnyyy/synergy/additional/betterbypasser",true))()
end)
Section:NewButton("Bypass chat New Use Q On / off", " ", function()
    _G.Keybind = 'Q'
loadstring(game:HttpGet("https://raw.githubusercontent.com/synnyyy/synergy/additional/betterbypasser",true))()
end)
---------------------------------------------------
local Tab = Window:NewTab("Pizza Party")
local Section = Tab:NewSection("script")
Section:NewButton("Pizza Party", " ", function()
    local OrionLib = loadstring(game:HttpGet"https://raw.githubusercontent.com/shlexware/Orion/main/source")()
local Tab = OrionLib:MakeWindow{ Name = "Ru Hee men Kup" }:MakeTab{ Name = "Night1-2", Icon = "rbxassetid://4483345998", PremiumOnly = false }
Tab:AddDropdown{
    Name = "TP Generator",
    Options = { "Gen1", "Gen2", "Gen3", "Gen4", "Gen5", "Gen6", "Gen7", "Gen8" },
    Callback = function(Value)
        if Value == 'Gen1' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-238.009476, 593.12384, -225.2211, 0, 0, 1, 0, 1, -0, -1, 0, 0)
        elseif Value == 'Gen2' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15.8495989, 593.12323, 30.4570179, -0.965929747, 0, -0.258804798, 0, 1, 0, 0.258804798, 0, -0.965929747)
        elseif Value == 'Gen3' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-101.205284, 595.122559, -10.748374, -1, 0, 0, 0, 1, 0, 0, 0, -1)
        elseif Value == 'Gen4' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-395.77832, 599.122803, -42.7952118, -1, 0, 0, 0, 1, 0, 0, 0, -1)
        elseif Value == 'Gen5' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-38.5897102, 593.122742, -185.65242, 1, 0, 0, 0, 1, 0, 0, 0, 1)
        elseif Value == 'Gen6' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-8.33073235, 593.123474, -194.24588, 0, 0, 1, 0, 1, -0, -1, 0, 0)
        elseif Value == 'Gen7' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-225.884552, 596.15741, 48.4549713, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            
        end
        print(Value)
    end
}
    Tab:AddDropdown{
    Name = "TP Switch",
    Options = { "Switch1", "Switch2", "Switch3", "Switch4", "Switch5", "Switch6", "Switch7", "Switch8" },
    Callback = function(Value)
        if Value == 'Switch1' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(152.976517, 593.596375, -5.55369091, -0.258969784, 0, 0.965885758, 0, 1, 0, -0.965885758, 0, -0.258969784)
        elseif Value == 'Switch2' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-303.96225, 592.199829, -256.000946, 0.999486446, 1.3324815e-08, 0.0320452712, -1.47429029e-08, 1, 4.4016371e-08, -0.0320452712, -4.44662049e-08, 0.999486446)
        elseif Value == 'Switch3' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-67.0335922, 594.199951, -12.396224, 0.997269809, 7.30435303e-08, -0.0738443285, -7.91588164e-08, 1, -7.98865756e-08, 0.0738443285, 8.55138964e-08, 0.997269809)
        elseif Value == 'Switch4' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-374.839783, 599.487122, -75.9484406, 0, 0, -1, 0, 1, 0, 1, 0, 0)
        elseif Value == 'Switch5' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(7.85261536, 593.431458, -29.7379913, -0.965929747, 0, -0.258804798, 0, 1, 0, 0.258804798, 0, -0.965929747)
        elseif Value == 'Switch6' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-170.260574, 595.555481, 17.5923119, 0, 0, 1, 0, 1, -0, -1, 0, 0)
        elseif Value == 'Switch7' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(63.9547119, 593.779968, -82.9184036, 0.500045776, -0, -0.865998983, 0, 1, -0, 0.865998983, 0, 0.500045776)
        elseif Value == 'Switch8' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-151.160477, 587.700378, -66.7284088, 0, 0, 1, 0, 1, -0, -1, 0, 0)
        end
        print(Value)
    end
}

Tab:AddDropdown{
    Name = "TP Exit",
    Options = { "RightDoor", "LeftDoor" },
    Callback = function(Value)
        if Value == 'RightDoor' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-161.500092, 593.269775, -322.038574, 1, 0, 0, 0, 1, 0, 0, 0, 1)-- Change CFrame to Whatever you want
        elseif Value == 'LeftDoor' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-166.500076, 593.269653, -322.038574, -1, 0, 0, 0, 1, 0, 0, 0, -1)-- Change CFrame to Whatever you want
        end
        print(Value)
    end
}
Tab:AddButton{ Name = "Tp Wires+Pizza", Callback = function()
    for i,v in pairs(game:GetService("Workspace").Items:GetDescendants()) do
    if v.Name == "TouchInterest" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Parent.CFrame
wait(.5)
end
end
Tab:AddButton{ Name = "Exit Door 2", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-171.189255, 566.471741, -229.11734, -5.24520874e-05, 0.216363877, 0.976312876, -1, -5.24520874e-05, -4.20510769e-05, 4.20510769e-05, -0.976312876, 0.216363847)-- Change CFrame to Whatever you want
end }
end }
Tab:AddButton{ Name = "TP SpawPlayer", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-160.800003, 596.200012, -306.799988, 0, 0, -1, 0, 1, 0, 1, 0, 0)-- Change CFrame to Whatever you want
end }

Tab:AddButton{ Name = "TP Exit Door2", Callback = function()
    for i,v in pairs(game:GetService("Workspace").ExitDoor2:GetDescendants()) do
    if v.Name == "TouchInterest" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Parent.CFrame
wait(.1)
end
end
end }
Tab:AddButton{ Name = "Bypass Speed", Callback = function()
    local walkSpeed = 50
 
 
 
local gmt = getrawmetatable(game)
 
setreadonly(gmt, false)
 
local oldindex = gmt.__index
 
gmt.__index = newcclosure(function(self,b)
 
if b == "WalkSpeed" then
 
return 16
 
end
 
return oldindex(self,b)
 end)
game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = walkSpeed
end }
--------------------------------------------------------------------------------------------------
local Section = Tab:AddSection({
	Name = "Night 3"
})
Tab:AddDropdown{
    Name = "TP Color Crad",
    Options = { "Red1", "Red2", "Red3", "Blue1", "Blue2", "Green1", "Green2", "Green3", "Green4" },
    Callback = function(Value)
        if Value == 'KeyCred Red,Blue,Green' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-55.117897, 117.51297, -65.0983887, 4.2617321e-05, 0.906304121, 0.422626197, 1, -4.26769257e-05, -9.46223736e-06, 9.46223736e-06, 0.422626197, -0.906304121)
        elseif Value == 'Red1' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(93.8251877, 132.169006, -77.0974731, -3.23057175e-05, 0.707060337, 0.707153201, 1, 3.23057175e-05, 1.33812428e-05, -1.33812428e-05, 0.707153201, -0.707060337)
        elseif Value == 'Red2' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(21.3341064, 132.168839, -100.722893, 2.05039978e-05, -0.86604017, 0.499974549, 1.00000012, 2.05039978e-05, -5.49852848e-06, -5.49852848e-06, 0.499974549, 0.866040111)
        elseif Value == 'Red3' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-5.36893463, 118.834961, -52.3013382, 1.00135803e-05, -0.342006564, -0.939697623, 1, 1.00135803e-05, 7.00354576e-06, 7.00354576e-06, -0.939697623, 0.342006564)
        elseif Value == 'Red4' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(45.49189, 128.562943, 42.4822083, 0, 0, -1, 1, 0, 0, 0, -1, 0)
        elseif Value == 'Blue1' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(60.1169815, 131.962936, 56.2061996, 4.29153442e-05, -0.984804988, -0.173663557, 1, 4.29153442e-05, 3.75509262e-06, 3.75509262e-06, -0.173663557, 0.984805048)
        elseif Value == 'Blue2' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(272.196625, 130.508728, -193.335266, -5.22136688e-05, 0.86597687, -0.500083923, 0.99999994, 5.22136688e-05, -1.39772892e-05, 1.39772892e-05, -0.500083923, -0.86597681)
        elseif Value == 'Green1' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(261.596313, 130.508728, -212.197052, -2.86102295e-05, 0.965907097, -0.258889139, 1, 2.86102295e-05, -3.76999378e-06, 3.76999378e-06, -0.258889139, -0.965907097)
        elseif Value == 'Green2' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(160.67691, 130.508698, -159.033112, -1.13248825e-05, -0.766070843, -0.642756104, 1, -1.13248825e-05, -4.14252281e-06, -4.14252281e-06, -0.642756104, 0.766070843)
        elseif Value == 'Green3' then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(176.542221, 130.508698, -152.056168, 3.56435776e-05, 0.573669672, 0.81908673, 1, -3.56435776e-05, -1.85370445e-05, 1.85370445e-05, 0.81908673, -0.573669672)
        elseif Value == 'Green4' then
            
        end
        print(Value)
    end
}
Tab:AddButton{ Name = "TP Crad", Callback = function()
    for i,v in pairs(game:GetService("Workspace").CardChips:GetDescendants()) do
    if v.Name == "TouchInterest" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Parent.CFrame
wait(.2)
end
end
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(111.990952, 132.186264, 39.2531242, 1, 0, 0, 0, 1, 0, 0, 0, 1)
wait(1)
end }
Tab:AddButton{ Name = "DoorRed", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-130.271439, 127.556595, -117.340744, 0.704181015, 7.14882304e-08, 0.710020483, -2.01101304e-08, 1, -8.07400014e-08, -0.710020483, 4.25769713e-08, 0.704181015)-- Change CFrame to Whatever you want
end }
Tab:AddButton{ Name = "DoorBlue", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(92.5772934, 131.552628, -104.00795, -0.553804398, -1.61495983e-09, 0.832646787, 1.30014488e-09, 1, 2.80429324e-09, -0.832646787, 2.6355913e-09, -0.553804398)-- Change CFrame to Whatever you want
end }
Tab:AddButton{ Name = "DoorGreen", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-7.00634336, 103.956894, -169.82402, -0.703530848, 1.89363281e-08, 0.71066469, 7.35411021e-09, 1, -1.93656522e-08, -0.71066469, -8.39802716e-09, -0.703530848)-- Change CFrame to Whatever you want
end }
Tab:AddButton{ Name = "Tp ResTorePower1", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1.88006735, 103.956902, -178.907074, -0.999698937, -9.83231345e-08, -0.0245359931, -9.85510269e-08, 1, 8.07881761e-09, 0.0245359931, 1.04944329e-08, -0.999698937)-- Change CFrame to Whatever you want
    
end }
Tab:AddButton{ Name = "Tp ResTorePower2", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-76.7626801, 118.556595, -54.4134979, -0.708665133, 4.50350024e-09, 0.705545008, 7.98309614e-08, 1, 7.38009902e-08, -0.705545008, 1.08624526e-07, -0.708665133)-- Change CFrame to Whatever you want
    
end }
Tab:AddButton{ Name = "Tp ResTorePower3", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1.94715989, 103.956795, -126.939812, 0.755607426, 5.94509935e-08, -0.655024767, -8.6325521e-08, 1, -8.81983375e-09, 0.655024767, 6.32096828e-08, 0.755607426)-- Change CFrame to Whatever you want
    
end }
Tab:AddButton{ Name = "Tp ResTorePower4", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-8.53493786, 103.956894, -208.588715, -0.748589516, -1.81150632e-08, -0.663033783, -1.03954516e-08, 1, -1.55846305e-08, 0.663033783, -4.77395545e-09, -0.748589516)-- Change CFrame to Whatever you want
    
end }
Tab:AddButton{ Name = "Tp ResTorePower5", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(92.184227, 131.552628, -84.1679382, 0.567721009, -6.83270542e-08, -0.823221028, 2.91126909e-08, 1, -6.29225525e-08, 0.823221028, 1.17562742e-08, 0.567721009)-- Change CFrame to Whatever you want
    
end }
Tab:AddButton{ Name = "Tp ResTorePower6", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(8.74688053, 131.571289, 74.3710556, -0.898632526, 4.62998599e-08, -0.438702226, 4.70462638e-08, 1, 9.16922716e-09, 0.438702226, -1.23995338e-08, -0.898632526)-- Change CFrame to Whatever you want
    
end }
Tab:AddButton{ Name = "Tp Escape", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1.70018923, 134.007263, -62.2194672, -1, 0, 0, 0, 1, 0, 0, 0, -1)
end }
local Section = Tab:AddSection({
	Name = "Night 4"
})
Tab:AddButton{ Name = "TP Batteries", Callback = function()
   for i,v in pairs(game:GetService("Workspace").Batteries:GetDescendants()) do
    if v.Name == "TouchInterest" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Parent.CFrame
wait(.1)
end
end
end }
Tab:AddButton{ Name = "Player Spaw Tp", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-161.671555, 50.7924194, 93.5674362, 1, 0, 0, 0, 1, 0, 0, 0, 1)-- Change CFrame to Whatever you want
end }
Tab:AddButton{ Name = "Room 1", Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-164.123932, 56.3661346, -246.894897, -0.00559211848, 3.25614167e-08, 0.999984384, -2.76506604e-08, 1, -3.27165566e-08, -0.999984384, -2.78331829e-08, -0.00559211848)-- Change CFrame to Whatever you want
end }
Tab:AddButton{ Name = "Exit White", Callback = function()
    for i,v in pairs(game:GetService("Workspace").EscapeDoor.Trigger:GetDescendants()) do
    if v.Name == "TouchInterest" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Parent.CFrame
wait(.1)
end
end
end }
end)
local Tab = Window:NewTab("Infectious Smile")
local Section = Tab:NewSection("Yes HEE")
Section:NewButton("Aura Bat", " ", function()
    _G.loop = true;
while _G.loop do wait()
game:GetService("Players").LocalPlayer.Character.Bat.SwingEvent:FireServer()
wait(0.1)
end
end)
Section:NewButton("Aura Smile", " ", function()
    _G.loop = true;
while _G.loop do wait()
game:GetService("Players").LocalPlayer.Character.Infected.InfectEvent:FireServer()

wait(.1)
end
end)
Section:NewButton("No Slowdown,‡πÑ‡∏°‡πàslow‡∏ï‡∏≠‡∏ô‡∏à‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô", " ", function()
    _G.loop = true;
while _G.loop do wait()
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 20
    wait(0.3)
end
end)
Section:NewButton("Aura Katana", " ", function()
    _G.loop = true;
while _G.loop do wait()
game:GetService("Players").LocalPlayer.Character.Katana.SwingEvent:FireServer()
wait(.1)
end
end)
Section:NewButton("GUi script Smlie", " ", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/BlackHoleKMT/InwGachar/40aa2728fcc0badd9c528ed268edb1393eb62a16/Smlie",true))();
end)
---------------------------------------------------
local Tab = Window:NewTab("Magic Training")
local Section = Tab:NewSection("Skills Q,E,R,T,Y,F,G,H,Z,X,C,V,B")
Section:NewButton("Auto SkillChat", " ", function()
    local key = {
    ["E"] = "Avada kedavra",
    ["R"] = "Defodio",
    ["T"] = "Deletrius",
    ["Y"] = "Infernum",
    ["F"] = "Sectumsempra",
    ["G"] = "Bombarda",
    ["H"] = "Crucio",
    ["Z"] = "Expulso",
    ["X"] = "Incendio",
    ["C"] = "Flare",
    ["V"] = "Confringo",
    ["B"] = "Depulso",
    ["Q"] = "appa",

}
game:GetService("UserInputService").InputBegan:Connect(function(p1,p2)
    if not p2 then
    local Nahee = key[p1.KeyCode.Name]  
    game.Players:Chat(Nahee)
    game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest"):FireServer(Nahee,"All")
    end
end)
end)

Section:NewButton("TP Elder Wand", " ", function()
    for i,v in pairs(game:GetService("Workspace")["Elder Wand"]:GetDescendants()) do
    if v.Name == "TouchInterest" then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Parent.CFrame
wait(.1)
end
end
end)
Section:NewButton("Auto PlayervsPlayer Click Button", " ", function()
    _G.loop = true;
while _G.loop do wait()
    local args = {
    [1] = {
        ["distance"] = .1
    }
}
game:GetService("InsertService"):WaitForChild("Events"):WaitForChild("advanceClash"):FireServer(unpack(args))
wait(.3)
end
end)
---------------------------------------------------
local Tab = Window:NewTab("‡πÇ‡∏õ‡∏£‡∏•‡∏±‡∏ö"  )local Section = Tab:NewSection("AdoptMe")
Section:NewButton("Adopt Me", " ", function()
    loadstring(game:HttpGet(('https://gitfront.io/r/ReQiuYTPL/wFUydaK74uGx/hub/raw/ReQiuYTPLHub.lua'),true))()
end)
---------------------------------------------------	
local Section = Tab:NewSection("Prison Life")
Section:NewButton("Aura Meelee", " ", function()
      while wait () do
  for i, e in pairs(game.Players:GetChildren()) do
                        if e ~= game.Players.LocalPlayer then
                            local meleeEvent = game:GetService("ReplicatedStorage").meleeEvent
                            meleeEvent:FireServer(e)
                            
                        end end end               
end)
Section:NewButton("Spaw Criminals+resetPlayer", " ", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/DigitalityScripts/roblox-scripts/main/Bring%20All'))()
end)
Section:NewToggle("TpRandom on", "", function()
    _G.loop = true;
while _G.loop do wait()
local randomPlayer = game.Players:GetPlayers()
[math.random(1,#game.Players:GetPlayers())]
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(randomPlayer.Character.Head.Position.X, randomPlayer.Character.Head.Position.Y, randomPlayer.Character.Head.Position.Z))
wait(.5)
end
end)
Section:NewToggle("TpRandom off", "", function()
    _G.loop = false;
while _G.loop do wait()
local randomPlayer = game.Players:GetPlayers()
[math.random(1,#game.Players:GetPlayers())]
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(randomPlayer.Character.Head.Position.X, randomPlayer.Character.Head.Position.Y, randomPlayer.Character.Head.Position.Z))
wait(.1)
end
end)
---------------------------------------------------
local Section = Tab:NewSection("Arcane Odyssey")
Section:NewButton("Aura Slash ‡∏ñ‡∏∑‡∏≠‡∏î‡∏≤‡∏ö‡πÑ‡∏ß‡πâ‡πÑ‡∏≠‡πÇ‡∏á‡πà", " ", function()
    getgenv().a = true

while a do task.wait()
    for i,v in pairs(workspace.Enemies:GetChildren()) do
        if v:IsA("Model") and v:FindFirstChildOfClass("Humanoid") and v:FindFirstChildOfClass("Humanoid").Health > 0 and game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) < 21 then
            local args = {
                [1] = 0,
                [2] = game:GetService("Players").LocalPlayer.Character,
                [3] = v,
                [4] = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool"),
                [5] = "Slash"
            }

            game:GetService("ReplicatedStorage").RS.Remotes.Combat.DealWeaponDamage:FireServer(unpack(args))
        end
    end
end
end)
Section:NewButton("Url kidachi", " ", function()
    loadstring(game:HttpGet('https://kidachi.xyz/Odyssey', true))()
end)
Section:NewButton("Url ", " ", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/bunnynwy/games/main/main.lua"))()
end)
---------------------------------------------------
local Section = Tab:NewSection("Kill Monsters to Save Princess")
Section:NewButton("Start", " ", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0.790123701, 4.08244085, -24.804903, 0.997684479, -4.22982899e-11, 0.0680126175, 1.33806036e-10, 1, -1.34089706e-09, -0.0680126175, 1.34689271e-09, 0.997684479)
end)
Section:NewToggle("Auto ATK", "attacks", function(value)
    getgenv().atk = value
    while getgenv().atk do
        task.wait()
        local remote = game:GetService("ReplicatedStorage").Remote
            remote.Weapon.TakeDamage:FireServer()
        end
end)

Section:NewToggle("Bring Enemies", "brings", function(value)
    getgenv().bri = value
    while getgenv().bri do
        task.wait()
        pcall(function()
            local reg = game.Players.LocalPlayer.stats["Battle Region"].Value
            local chara = game.Players.LocalPlayer.Character.HumanoidRootPart
            for p, enemy in pairs(game.Workspace.Waves[reg].Enemy:GetChildren()) do
                enemy.HumanoidRootPart.CFrame = CFrame.new(chara.Position + chara.CFrame.LookVector * 3)
            end
        end)
    end
end)
Section:NewButton("HipHeight", " ", function()
    local library = loadstring(game:HttpGet("https://pastebin.com/raw/5hTCvJ7V",true))()
local main2 = library:CreateWindow('Hip Height')
local Other = main2:Section('Other')
local part2 = Instance.new("Part")
local hipHeightSlider = main2:Slider('Hip Height', {min = 3, max = 25, default = 0}, function(value)
    game:GetService('Players').LocalPlayer.Character.Humanoid.HipHeight = value
end)
end)

Section:NewButton("Rejoin", "Click to rejoin", function()
    game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
end)

local Section = Tab:NewSection("Slap Battlesüëè")
Section:NewButton("Url", " ", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/dizyhvh/slap_battles_gui/main/0.lua"))()
end)
Section:NewButton("‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏π‡∏ó‡∏≥‡πÄ‡∏≠‡∏á ‡πÄ‡∏õ‡∏¥‡∏î", " ", function()
    function isSpawned(player)
   if workspace:FindFirstChild(player.Name) and player.Character:FindFirstChild("HumanoidRootPart") then
       return true
   else
       return false
   end
end
_G.loop = true;
while _G.loop do wait()
while wait() do
   for i, v in pairs(game.Players:GetPlayers()) do
       if isSpawned(v) and v ~= game.Players.LocalPlayer and not v.Character.Head:FindFirstChild("UnoReverseCard") then
           if (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10 then
               game:GetService("ReplicatedStorage").b:FireServer(v.Character["Head"])
               wait(.1)
                end
            end
        end
    end
end
end)
Section:NewButton("‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏π‡∏ó‡∏≥‡πÄ‡∏≠‡∏á ‡∏õ‡∏¥‡∏î", " ", function()
    function isSpawned(player)
   if workspace:FindFirstChild(player.Name) and player.Character:FindFirstChild("HumanoidRootPart") then
       return false
   else
       return false
   end
end
_G.loop = false;
while _G.loop do wait()
while wait() do
   for i, v in pairs(game.Players:GetPlayers()) do
       if isSpawned(v) and v ~= game.Players.LocalPlayer and not v.Character.Head:FindFirstChild("UnoReverseCard") then
           if (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10 then
               game:GetService("ReplicatedStorage").b:FireServer(v.Character["Head"])
               wait(.1)
                end
            end
        end
    end
end
end)
local Section = Tab:NewSection("Phantom Forces")
Section:NewButton("Phantom Forces", " ", function()
    loadstring(game:HttpGet('https://gitfront.io/r/ReQiuYTPL/wFUydaK74uGx/hub/raw/ReQiuYTPLHub.lua'))()
end)
local Section = Tab:NewSection("Dungeon Quest!")
Section:NewButton("Fram Desert Temple uplevel", " ", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/F5vSFHZt", true))()
end)
Section:NewButton("Fram All Level", " ", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/BlackHoleKMT/InwGachar/main/Dungeon%20Quest!",true))();
end)
local Section = Tab:NewSection("Treasure Hunt Simulator")
Section:NewButton("Hack", " ", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/BlackHoleKMT/InwGachar/main/Treasure%20Hunt%20Simulator",true))();
end)
local Section = Tab:NewSection("Westbound")
Section:NewButton("Silent hack", " ", function()
    loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/Exunys/westbound.pro-Utilites/main/Main.lua"))()
end)
local Section = Tab:NewSection("Combat Warriors")
Section:NewButton("Zap Hub", " ", function()
    loadstring(game:HttpGet("https://www.itots.tk/zaphub/combat-warriors.lua", true))()
end)
Section:NewButton("MAXHUB", " ", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ufouzzed/CWShitterHub/main/CWScript.lua"))() 
end)
local Section = Tab:NewSection("Flee the Facility")
Section:NewButton("ESP All Left ALT ON/Off", " ", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/OneProtocol/Project/main/Loader", true))()
end)
Section:NewButton("Auto Computer", " ", function()
    _G.loop = true;
while _G.loop do wait()
local args = {
    [1] = "Input",
    [2] = "Action",
    [3] = true
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
local args = {
    [1] = "SetPlayerMinigameResult",
    [2] = true
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
wait(.1)
end
end)
---------------------------------------------------
local Section = Tab:NewSection("Key Pass!!!")
Section:NewKeybind("KeybindPass", "KeybindInfo", Enum.KeyCode.RightControl, function()
	Library:ToggleUI()
end)
---------------------------------------------------
-- Section:NewButton("Hack", " ", function()
    
-- end)
